{"remainingRequest":"/Users/whitman-colm/repos/whitmansio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/whitman-colm/repos/whitmansio/docs/.vuepress/components/MContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/whitman-colm/repos/whitmansio/docs/.vuepress/components/MContent.vue","mtime":1542215127949},{"path":"/Users/whitman-colm/repos/whitmansio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/whitman-colm/repos/whitmansio/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/whitman-colm/repos/whitmansio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/whitman-colm/repos/whitmansio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport markdownIt from \"markdown-it\";\nimport emoji from \"markdown-it-emoji\";\n\nexport default {\n  props: {\n    content: {\n      default: \"\",\n      type: String\n    },\n    inline: {\n      default: false,\n      type: Boolean\n    }\n  },\n\n  mounted() {\n    var md = new markdownIt().use(emoji);\n    var result;\n    if (this.inline) {\n      result = md.renderInline(this.content);\n    } else {\n      result = md.render(this.content);\n    }\n    this.$el.innerHTML = result;\n  }\n};\n",{"version":3,"sources":["MContent.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MContent.vue","sourceRoot":".vuepress/components","sourcesContent":["<template>\n  <div>\n  </div>\n</template>\n\n<script>\nimport markdownIt from \"markdown-it\";\nimport emoji from \"markdown-it-emoji\";\n\nexport default {\n  props: {\n    content: {\n      default: \"\",\n      type: String\n    },\n    inline: {\n      default: false,\n      type: Boolean\n    }\n  },\n\n  mounted() {\n    var md = new markdownIt().use(emoji);\n    var result;\n    if (this.inline) {\n      result = md.renderInline(this.content);\n    } else {\n      result = md.render(this.content);\n    }\n    this.$el.innerHTML = result;\n  }\n};\n</script>\n\n<style>\n\n</style>"]}]}