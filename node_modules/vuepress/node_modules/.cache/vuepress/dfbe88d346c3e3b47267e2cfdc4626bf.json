{"remainingRequest":"/home/colm/repos/whitsio/node_modules/babel-loader/lib/index.js??ref--3-1!/home/colm/repos/whitsio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/colm/repos/whitsio/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/colm/repos/whitsio/docs/.vuepress/components/MContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/colm/repos/whitsio/docs/.vuepress/components/MContent.vue","mtime":1572730710031},{"path":"/home/colm/repos/whitsio/node_modules/cache-loader/dist/cjs.js","mtime":1572734701264},{"path":"/home/colm/repos/whitsio/node_modules/babel-loader/lib/index.js","mtime":1572734701322},{"path":"/home/colm/repos/whitsio/node_modules/cache-loader/dist/cjs.js","mtime":1572734701264},{"path":"/home/colm/repos/whitsio/node_modules/vue-loader/lib/index.js","mtime":1572734702005}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\nimport markdownIt from \"markdown-it\";\nimport emoji from \"markdown-it-emoji\";\nexport default {\n  props: {\n    content: {\n      default: \"\",\n      type: String\n    },\n    inline: {\n      default: false,\n      type: Boolean\n    }\n  },\n  mounted: function mounted() {\n    var md = new markdownIt().use(emoji);\n    var result;\n\n    if (this.inline) {\n      result = md.renderInline(this.content);\n    } else {\n      result = md.render(this.content);\n    }\n\n    this.$el.innerHTML = result;\n  }\n};",{"version":3,"sources":["MContent.vue"],"names":[],"mappings":";;;;;AAMA,OAAA,UAAA,MAAA,aAAA;AACA,OAAA,KAAA,MAAA,mBAAA;AAEA,eAAA;AACA,SAAA;AACA,aAAA;AACA,eAAA,EADA;AAEA,YAAA;AAFA,KADA;AAKA,YAAA;AACA,eAAA,KADA;AAEA,YAAA;AAFA;AALA,GADA;AAYA,SAZA,qBAYA;AACA,QAAA,KAAA,IAAA,UAAA,GAAA,GAAA,CAAA,KAAA,CAAA;AACA,QAAA,MAAA;;AACA,QAAA,KAAA,MAAA,EAAA;AACA,eAAA,GAAA,YAAA,CAAA,KAAA,OAAA,CAAA;AACA,KAFA,MAEA;AACA,eAAA,GAAA,MAAA,CAAA,KAAA,OAAA,CAAA;AACA;;AACA,SAAA,GAAA,CAAA,SAAA,GAAA,MAAA;AACA;AArBA,CAAA","sourcesContent":["<template>\n  <div>\n  </div>\n</template>\n\n<script>\nimport markdownIt from \"markdown-it\";\nimport emoji from \"markdown-it-emoji\";\n\nexport default {\n  props: {\n    content: {\n      default: \"\",\n      type: String\n    },\n    inline: {\n      default: false,\n      type: Boolean\n    }\n  },\n\n  mounted() {\n    var md = new markdownIt().use(emoji);\n    var result;\n    if (this.inline) {\n      result = md.renderInline(this.content);\n    } else {\n      result = md.render(this.content);\n    }\n    this.$el.innerHTML = result;\n  }\n};\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"docs/.vuepress/components"}]}